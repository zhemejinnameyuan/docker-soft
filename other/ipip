#!/bin/sh

clear
echo -e "\033[32;1m############################################################################"
echo "                                                                           "
echo -e "                               IP遂道配置脚本                              "
echo "                                                                           "
echo " 说明："
echo " 1、正常网卡是外网IP时，入口和出口端使用正常IP即可"
echo " 2、网卡只有内网IP对外时，本端使用内网IP，对端使用外网IP，入口和出口都是一样"
echo " IP遂道是双向连接，所以两边连接的IP是对调的"
echo ""
echo -e "############################################################################\033[0m"
echo ""

exiterr() { echo "Error: $1" >&2; exit 1; }
bigecho() { echo; echo "## $1"; echo; }

# 获取默认网卡
DEFAULT_NET_IFACE=''
DEFAULT_NET_IP=''
if [ -z "$DEFAULT_NET_IFACE" ]; then
  def_iface=$(route 2>/dev/null | grep -m 1 '^default' | grep -o '[^ ]*$')
  [ -z "$def_iface" ] && def_iface=$(ip -4 route list 0/0 2>/dev/null | grep -m 1 -Po '(?<=dev )(\S+)')
  def_state=$(cat "/sys/class/net/$def_iface/operstate" 2>/dev/null)
  if [ -n "$def_state" ] && [ "$def_state" != "down" ]; then
    case "$def_iface" in
      wl*)
        exiterr "Wireless interface '$def_iface' detected. DO NOT run this script on your PC or Mac!"
        ;;
    esac
    DEFAULT_NET_IFACE="$def_iface"
  else
    eth0_state=$(cat "/sys/class/net/eth0/operstate" 2>/dev/null)
    if [ -z "$eth0_state" ] || [ "$eth0_state" = "down" ]; then
      exiterr "Could not detect the default network interface."
    fi
    DEFAULT_NET_IFACE=eth0
  fi
fi
 
# 获取网卡绑定ip
if [ -z "$DEFAULT_NET_IP" ]; then
  def_ip=$(ip a|grep inet|grep -v 127.0.0.1|grep -v inet6|grep $DEFAULT_NET_IFACE |awk 'NR==1{print $2}'| awk -F '/' '{print $1}')
  if [ -z "$def_ip" ]; then
    exiterr "Could not detect the default network interface ip."
  fi
  DEFAULT_NET_IP="$def_ip"
fi

# 获取公网ip和对应的网卡
PUBLIC_IP=$(curl -s icanhazip.com | tr -d "\n")
if [ -n "$PUBLIC_IP" ]; then
  PUBLIC_IFACE=$(ip a |grep inet | grep $PUBLIC_IP | awk '{print $8}')
  if [ -z "$PUBLIC_IFACE" ]; then
    # 出口ip没有对应的网卡使用默认网卡ip
    PUBLIC_IP="$DEFAULT_NET_IP"
  	PUBLIC_IFACE="$DEFAULT_NET_IFACE"
  fi
else
  PUBLIC_IP="$DEFAULT_NET_IP"
  PUBLIC_IFACE="$DEFAULT_NET_IFACE"
fi

#PPP_IP=`ip a | grep 'global ppp' | awk '{print $4}' | sed -r 's/(.*\.).*/\10/g'`
PPP_IP=172.168.1.0

# 设置出口IP
function baseSet()
{
  echo ""
  read -p "本地出口IP [$PUBLIC_IP]：" t_export_ip
  read -p "本地出口网卡名 [$PUBLIC_IFACE]：" t_inet_intface

  if [ -z "$t_export_ip" ] || [ -z "$t_inet_intface" ];then
    echo ""
  else
    PUBLIC_IP=$t_export_ip
    PUBLIC_IFACE=$t_inet_intface
  fi
}


PORT=0
REMOTE_IP=""


# 本地安装ipip
function local_install()
{
yum -y install iptables-services
systemctl disable firewalld
systemctl stop firewalld
#iptables -F
#iptables -X
#iptables -Z
#iptables -F -t nat
#iptables -X -t nat
#iptables -Z -t nat

sysctl -w net.ipv4.ip_forward=1

cat >/bin/ipip.sh<<EOF
#! /bin/bash

isipip_tb=\`find "/etc/iproute2/rt_tables"|xargs grep -ri "ipip_tb"\`
if ! [ -n "\${isipip_tb}" ]; then
echo "201 ipip_tb" >> /etc/iproute2/rt_tables
fi

ip tunnel del tun0
modprobe ipip
ip tunnel add tun0 mode ipip local $PUBLIC_IP remote $REMOTE_IP ttl 255
ip link set tun0 up
ip addr add 10.138.0.1 peer 10.138.0.2 dev tun0
#route add -net 10.1.1.0/24 dev tun0
route add -net $PPP_IP/24 dev tun0
ip route add default via 10.138.0.2 dev tun0 table ipip_tb
#ip rule add from 10.1.1.0/24 table ipip_tb
ip rule add from $PPP_IP/24 table ipip_tb

#防火墙设置
#isiptable=\`find "/etc/sysconfig/iptables"|xargs grep -ri "\-A FORWARD \-i ppp+ \-p tcp \-m tcp \-\-tcp\-flags FIN,SYN,RST,ACK SYN \-j TCPMSS \-\-set\-mss 1356"\`
#if ! [ -n "\${isiptable}" ]; then
##iptables -t nat -A POSTROUTING -s 10.1.1.0/24 -o $PUBLIC_IFACE -j SNAT --to-source $PUBLIC_IP
##iptables -t nat -A POSTROUTING -s $PPP_IP/24 -o $PUBLIC_IFACE -j SNAT --to-source $PUBLIC_IP
##iptables -I FORWARD -i ppp+ -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356
##service iptables save
##service iptables restart
#fi

#iptables -A FORWARD -i ppp+ -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356
iptables -t nat -A POSTROUTING -d $REMOTE_IP -o $PUBLIC_IFACE -j MASQUERADE

ping 10.138.0.2 -c 10
EOF

#vpnInnerIPSet
chkconfig --level 2345 iptables on
isping=`find "/etc/crontab"|xargs grep -ri "ping 10.138.0.2"`
if ! [ -n "${isping}" ]; then
echo "*/5 * * * * root ping 10.138.0.2 -c 5" >> /etc/crontab
service crond restart
fi
}

# 对端安装
function remote_install()
{
yum -y install iptables
yum -y install iptables-services
systemctl disable firewalld
systemctl stop firewalld
#iptables -F
#iptables -X
#iptables -Z
#iptables -F -t nat
#iptables -X -t nat
#iptables -Z -t nat

sysctl -w net.ipv4.ip_forward=1

cat >/bin/ipip.sh<<EOF
#! /bin/bash

ip tunnel del tun0
modprobe ipip
ip tunnel add tun0 mode ipip local $PUBLIC_IP remote $REMOTE_IP ttl 255
ip link set tun0 up
ip addr add 10.138.0.2 peer 10.138.0.1 dev tun0
#route add -net 10.1.1.0/24 dev tun0
route add -net $PPP_IP/24 dev tun0

##防火墙设置
#isiptable=\`find "/etc/sysconfig/iptables"|xargs grep -ri "\-A FORWARD \-i ppp+ \-p tcp \-m tcp \-\-tcp\-flags FIN,SYN,RST,ACK SYN \-j TCPMSS \-\-set\-mss 1356"\`
#if ! [ -n "\${isiptable}" ]; then
##iptables -t nat -A POSTROUTING -s 10.1.1.0/24 -j SNAT --to-source $PUBLIC_IP
##iptables -t nat -A POSTROUTING -s $PPP_IP/24 -j SNAT --to-source $PUBLIC_IP
##iptables -I FORWARD -i ppp+ -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356
##service iptables save
##service iptables restart
#fi

#iptables -A FORWARD -i ppp+ -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -j TCPMSS --set-mss 1356
iptables -t nat -A POSTROUTING -o $PUBLIC_IFACE -j MASQUERADE

ping 10.138.0.1 -c 10
EOF

chkconfig --level 2345 iptables on
isping=`find "/etc/crontab"|xargs grep -ri "ping 10.138.0.1"`
if ! [ -n "${isping}" ]; then
echo "*/5 * * * * root ping 10.138.0.1 -c 5" >> /etc/crontab
service crond restart
fi
}

# 设置对端ip
function remote_ip_set()
{
  echo -e "\033[33;1m  请输入对端外网IP :\033[0m \c"
  read REMOTE_IP
  
  if [ -z "$REMOTE_IP" ]; then
    remote_ip_set
  else
    if [ "$PORT" == 1 ]; then
      local_install
    else
      remote_install
    fi
  fi
}

function portSet(){
echo ""	
echo -e "请选择 IP遂道 配置的端"
echo -e "  1 配置入口端 "
echo -e "  2 配置出口端"
#echo -e "  3 修改本地vpn内网IP"
echo -e "  e 退出安装"
echo ""
echo -e "\033[33;1m  请输入安装服务序号 :\033[0m \c"
read -n1 port_val
echo ""
case "$port_val" in
  1)
    PORT=1
  ;;
  2)
    PORT=2
  ;;
  e)
    exit
  ;;
  *)
  portSet
esac
remote_ip_set

chmod +x /etc/rc.d/rc.local
chmod +x /bin/ipip.sh
if [ -n `find "/etc/rc.d/rc.local"|xargs grep -ri "\/bin\/ipip.sh"` ]; then
echo "/bin/ipip.sh" >> /etc/rc.d/rc.local
fi
/bin/ipip.sh

isinstall=`ifconfig | grep -Po 'tun0'`
if [ -n "$isinstall" ]; then
echo -e "\033[32;1m安装成功！\033[0m"
else
echo -e "\033[31;1m 安装失败，请重新安装或检查是否有配置错误\033[0m "
fi
}

# 基本信息显示
echo -e "\n\033[32;1m本地网卡信息\n网卡名  IP地址"
#ifconfig | grep -v "lo" | grep -v "ppp" | grep -v "tun" | grep -A1 'flags='
ip a|grep inet|grep -v 127.0.0.1|grep -v inet6|grep -v ppp|grep -v tun
echo -e "\033[0m"
echo -e "出口网卡 \033[33;1m $PUBLIC_IFACE \033[0m"
echo -e "出口网卡IP \033[33;1m $PUBLIC_IP \033[0m"
echo -e "默认网卡   \033[33;1m $DEFAULT_NET_IFACE \033[0m"
echo -e "默认网卡IP   \033[33;1m $DEFAULT_NET_IP \033[0m"
echo -e "将使用的出口IP \033[33;1m $PUBLIC_IP \033[0m"
echo -e "将使用的ppp协议IP \033[33;1m $PPP_IP \033[0m"

read -p "是否需要修改配置信息？(y/n default:n) " isSet
if [ "$isSet" == "y" ] || [ -z "$PUBLIC_IP" ] || [ -z "$PUBLIC_IFACE" ]; then
  baseSet
fi

portSet



